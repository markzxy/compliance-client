{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/\\u5927\\u4E8C/system engineering/chatbot/submit 3/compliance-client/src/pages/Register.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport FormErrors from \"../components/FormErrors\";\nimport { Form, Button, Col } from \"react-bootstrap\";\n\nfunction Register(props) {\n  const [redirect, setRedirect] = useState(\"\");\n  const [formValues, setFormValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"/user/register\", formValues);\n      console.log(response);\n\n      if (response.status === 200) {\n        setRedirect({\n          pathname: \"/login\",\n          state: {\n            flashMessage: {\n              successMessage: \"You have successfully signed up\"\n            }\n          }\n        });\n      }\n    } catch (err) {\n      console.log(\"sign up server error\");\n      console.log(err);\n    }\n  };\n\n  const validateForm = () => {\n    const errors = [];\n\n    if (formValues.name.length < 1) {\n      errors.push(\"Please enter your name\");\n    }\n\n    if (formValues.email.length < 1) {\n      errors.push(\"Please enter your email\");\n    }\n\n    if (formValues.password.length < 1) {\n      errors.push(\"Please enter your password\");\n    }\n\n    if (formValues.passwordReenter !== formValues.password) {\n      errors.push(\"Your passwords do not match\");\n    }\n\n    if (errors.length > 0) {\n      setFormErrors(errors);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleChange = e => {\n    setFormValues({ ...formValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  if (redirect.pathname) {\n    return React.createElement(Redirect, {\n      to: {\n        pathname: redirect.pathname,\n        state: redirect.state\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Register\"), React.createElement(FormErrors, {\n    formErrors: formErrors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasicName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Form.Control, {\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: formValues.name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Email address\"), React.createElement(Form.Control, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: formValues.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"We'll never share your email with anyone else.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Form.Control, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    value: formValues.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Re-enter Password\"), React.createElement(Form.Control, {\n    name: \"passwordReenter\",\n    type: \"password\",\n    placeholder: \"Re-enter password\",\n    value: formValues.passwordReenter,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })))), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Register\")));\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/apple/Desktop/大二/system engineering/chatbot/submit 3/compliance-client/src/pages/Register.js"],"names":["React","useState","axios","Redirect","FormErrors","Form","Button","Col","Register","props","redirect","setRedirect","formValues","setFormValues","name","email","password","formErrors","setFormErrors","handleSubmit","e","preventDefault","validateForm","response","post","console","log","status","pathname","state","flashMessage","successMessage","err","errors","length","push","passwordReenter","handleChange","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,QAAkC,iBAAlC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC;AACzCa,IAAAA,IAAI,EAAE,EADmC;AAEzCC,IAAAA,KAAK,EAAE,EAFkC;AAGzCC,IAAAA,QAAQ,EAAE;AAH+B,GAAD,CAA5C;AAKA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMkB,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACC,YAAY,EAAjB,EAAqB;AACjB;AACH;;AAED,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAW,gBAAX,EAA6BZ,UAA7B,CAAvB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,UAAIA,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AACzBhB,QAAAA,WAAW,CAAC;AACRiB,UAAAA,QAAQ,EAAE,QADF;AAERC,UAAAA,KAAK,EAAE;AACHC,YAAAA,YAAY,EAAE;AACVC,cAAAA,cAAc,EAAE;AADN;AADX;AAFC,SAAD,CAAX;AAQH;AACJ,KAbD,CAaE,OAAOC,GAAP,EAAY;AACVP,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH;AACJ,GAvBD;;AAwBA,QAAMV,YAAY,GAAG,MAAM;AACvB,UAAMW,MAAM,GAAG,EAAf;;AACA,QAAIrB,UAAU,CAACE,IAAX,CAAgBoB,MAAhB,GAAyB,CAA7B,EAAgC;AAC5BD,MAAAA,MAAM,CAACE,IAAP,CAAY,wBAAZ;AACH;;AACD,QAAIvB,UAAU,CAACG,KAAX,CAAiBmB,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BD,MAAAA,MAAM,CAACE,IAAP,CAAY,yBAAZ;AACH;;AACD,QAAIvB,UAAU,CAACI,QAAX,CAAoBkB,MAApB,GAA6B,CAAjC,EAAoC;AAChCD,MAAAA,MAAM,CAACE,IAAP,CAAY,4BAAZ;AACH;;AAED,QAAIvB,UAAU,CAACwB,eAAX,KAA+BxB,UAAU,CAACI,QAA9C,EAAwD;AACpDiB,MAAAA,MAAM,CAACE,IAAP,CAAY,6BAAZ;AACH;;AAED,QAAIF,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;AACnBhB,MAAAA,aAAa,CAACe,MAAD,CAAb;AACA,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GArBD;;AAuBA,QAAMI,YAAY,GAAGjB,CAAC,IAAI;AACtBP,IAAAA,aAAa,CAAC,EACV,GAAGD,UADO;AAEV,OAACQ,CAAC,CAACkB,MAAF,CAASxB,IAAV,GAAiBM,CAAC,CAACkB,MAAF,CAASC;AAFhB,KAAD,CAAb;AAIH,GALD;;AAOA,MAAI7B,QAAQ,CAACkB,QAAb,EAAuB;AACnB,WACI,oBAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAA,QAAAA,QAAQ,EAAElB,QAAQ,CAACkB,QADnB;AAEAC,QAAAA,KAAK,EAAEnB,QAAQ,CAACmB;AAFhB,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGI,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEZ,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,YAHhB;AAII,IAAA,KAAK,EAAEP,UAAU,CAACE,IAJtB;AAKI,IAAA,QAAQ,EAAEuB,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAWI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,WAAW,EAAC,aAHhB;AAII,IAAA,KAAK,EAAEzB,UAAU,CAACG,KAJtB;AAKI,IAAA,QAAQ,EAAEsB,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDATJ,CAXJ,EAyBI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,WAAW,EAAC,UAHhB;AAII,IAAA,KAAK,EAAEzB,UAAU,CAACI,QAJtB;AAKI,IAAA,QAAQ,EAAEqB,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAWI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,iBADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,WAAW,EAAC,mBAHhB;AAII,IAAA,KAAK,EAAEzB,UAAU,CAACwB,eAJtB;AAKI,IAAA,QAAQ,EAAEC,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAXJ,CADJ,CAzBJ,EAiDI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjDJ,CAJJ,CADJ;AA4DH;;AAED,eAAe7B,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport FormErrors from \"../components/FormErrors\";\nimport { Form, Button, Col } from \"react-bootstrap\";\n\nfunction Register(props) {\n    const [redirect, setRedirect] = useState(\"\");\n    const [formValues, setFormValues] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\"\n    });\n    const [formErrors, setFormErrors] = useState([]);\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        if (!validateForm()) {\n            return;\n        }\n\n        try {\n            const response = await axios.post(\"/user/register\", formValues);\n            console.log(response);\n            if (response.status === 200) {\n                setRedirect({\n                    pathname: \"/login\",\n                    state: {\n                        flashMessage: {\n                            successMessage: \"You have successfully signed up\"\n                        }\n                    }\n                });\n            }\n        } catch (err) {\n            console.log(\"sign up server error\");\n            console.log(err);\n        }\n    };\n    const validateForm = () => {\n        const errors = [];\n        if (formValues.name.length < 1) {\n            errors.push(\"Please enter your name\");\n        }\n        if (formValues.email.length < 1) {\n            errors.push(\"Please enter your email\");\n        }\n        if (formValues.password.length < 1) {\n            errors.push(\"Please enter your password\");\n        }\n\n        if (formValues.passwordReenter !== formValues.password) {\n            errors.push(\"Your passwords do not match\");\n        }\n\n        if (errors.length > 0) {\n            setFormErrors(errors);\n            return false;\n        }\n        return true;\n    };\n\n    const handleChange = e => {\n        setFormValues({\n            ...formValues,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    if (redirect.pathname) {\n        return (\n            <Redirect\n                to={{\n                    pathname: redirect.pathname,\n                    state: redirect.state\n                }}\n            />\n        );\n    }\n\n    return (\n        <div>\n            <h3 className=\"my-3\">Register</h3>\n\n            <FormErrors formErrors={formErrors} />\n            <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicName\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Enter name\"\n                        value={formValues.name}\n                        onChange={handleChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Enter email\"\n                        value={formValues.email}\n                        onChange={handleChange}\n                    />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Row>\n                        <Col>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                value={formValues.password}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col>\n                            <Form.Label>Re-enter Password</Form.Label>\n                            <Form.Control\n                                name=\"passwordReenter\"\n                                type=\"password\"\n                                placeholder=\"Re-enter password\"\n                                value={formValues.passwordReenter}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Form.Row>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Register\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}