{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/\\u5927\\u4E8C/system engineering/chatbot/submit 3/compliance-client/src/pages/Chatbot.js\";\nimport React, { useState } from \"react\";\nimport \"../Chatbot.css\";\nimport { useEffect } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport \"../App\";\n\nfunction Chatbot(props) {\n  const [userMessage, setUserMessage] = useState(\"\");\n  const [conversationHistory, setConversationHistory] = useState([]);\n\n  const handleChange = event => {\n    setUserMessage(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    // preventing a default browser reloading\n    event.preventDefault();\n\n    if (!userMessage.trim()) {\n      return;\n    }\n\n    ;\n\n    if (window.refreshChatbot) {\n      window.refreshChatbot = false;\n      fetch(\"/api/saveTimePoint\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: \"{}\",\n          sessionID: \"ryan\"\n        })\n      });\n    }\n\n    var msg = {\n      text: userMessage,\n      user: \"human\"\n    };\n    setConversationHistory(conversationHistory => [...conversationHistory, msg]);\n    const response = await fetch(\"/api/inputText\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: userMessage,\n        sessionID: \"ryan\"\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n    msg = {\n      text: data.message,\n      user: \"ai\"\n    };\n    setConversationHistory(conversationHistory => [...conversationHistory, msg]);\n    setUserMessage(\"\");\n  };\n\n  const ChatBubble = (text, i, className) => {\n    return (// key for react's internal id's\n      React.createElement(\"div\", {\n        key: `${className}-${i}`,\n        className: `${className} chat-bubble`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"chat-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, text))\n    );\n  };\n\n  const chat = conversationHistory.map((e, index) => ChatBubble(e.text, index, e.user));\n  const formStyle = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"1vh 10%\"\n  };\n  return React.createElement(\"div\", {\n    style: {\n      maxHeight: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Compliance Expert, your friendly assistant\"), React.createElement(\"div\", {\n    className: \"chat-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"conversationHistory-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, chat), React.createElement(\"div\", {\n    className: \"message-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    style: formStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Type here...\",\n    value: userMessage,\n    onChange: handleChange,\n    style: {\n      marginRight: \"3%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Enter\")))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }));\n}\n\nexport default Chatbot;","map":{"version":3,"sources":["/Users/apple/Desktop/å¤§äºŒ/system engineering/chatbot/submit 3/compliance-client/src/pages/Chatbot.js"],"names":["React","useState","useEffect","Form","Col","Button","Chatbot","props","userMessage","setUserMessage","conversationHistory","setConversationHistory","handleChange","event","target","value","handleSubmit","preventDefault","trim","window","refreshChatbot","fetch","method","headers","body","JSON","stringify","message","sessionID","msg","text","user","response","data","json","console","log","ChatBubble","i","className","chat","map","e","index","formStyle","display","alignItems","justifyContent","padding","maxHeight","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../Chatbot.css\";\nimport { useEffect } from \"react\";\nimport {Form, Col, Button} from \"react-bootstrap\"\nimport \"../App\";\n\nfunction Chatbot(props) {\n    const [userMessage, setUserMessage] = useState(\"\");\n    const [conversationHistory, setConversationHistory] = useState([]);\n\n    const handleChange = event => {\n        setUserMessage(event.target.value);\n    };\n\n    const handleSubmit = async event => {\n        // preventing a default browser reloading\n        event.preventDefault();\n        if (!userMessage.trim()) {\n            return\n        };\n\n        if (window.refreshChatbot) {\n            window.refreshChatbot = false;\n\n            fetch(\"/api/saveTimePoint\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    message: \"{}\",\n                    sessionID: \"ryan\"\n                })\n            });\n        }\n\n        var msg = {\n            text: userMessage,\n            user: \"human\"\n        };\n\n        setConversationHistory(conversationHistory => [\n            ...conversationHistory,\n            msg\n        ]);\n\n        const response = await fetch(\"/api/inputText\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                message: userMessage,\n                sessionID: \"ryan\"\n            })\n        });\n\n        const data = await response.json();\n        console.log(data);\n\n        msg = {\n            text: data.message,\n            user: \"ai\"\n        };\n\n        setConversationHistory(conversationHistory => [\n            ...conversationHistory,\n            msg\n        ]);\n\n        setUserMessage(\"\");\n    };\n\n    const ChatBubble = (text, i, className) => {\n        return (\n            // key for react's internal id's\n            <div\n                key={`${className}-${i}`}\n                className={`${className} chat-bubble`}\n            >\n                <span className=\"chat-content\">{text}</span>\n            </div>\n        );\n    };\n\n    const chat = conversationHistory.map((e, index) =>\n        ChatBubble(e.text, index, e.user)\n    );\n\n    const formStyle = {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: \"1vh 10%\",\n\n    }\n\n    return (\n        <div style={{ maxHeight: \"100vh\" }}>\n            <h1>Compliance Expert, your friendly assistant</h1>\n            <div className=\"chat-window\">\n                <div className=\"conversationHistory-view\">{chat}</div>\n                <div className=\"message-box\">\n                    <Form onSubmit={handleSubmit} style={formStyle}>\n\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Type here...\"\n                                    value={userMessage}\n                                    onChange={handleChange}\n                                    style={{marginRight:\"3%\"}}\n                                />\n                       \n                                <Button variant=\"primary\" type=\"submit\">\n                                    Enter\n                                </Button>\n                    \n                    </Form>\n                    {/* <form onSubmit={handleSubmit}>\n                        <input\n                            value={userMessage}\n                            onChange={handleChange}\n                            className=\"text-input\"\n                            type=\"text\"\n                            autoFocus\n                            placeholder=\"Type your message and hit Enter to send\"\n                        />\n                        <button\n                            type=\"button\"\n                            className=\"send-button\"\n                            onClick={handleSubmit}\n                        >\n                            Send\n                        </button>\n                    </form> */}\n                </div>\n            </div>\n            <br></br>\n        </div>\n    );\n}\n\nexport default Chatbot;\n"]},"metadata":{},"sourceType":"module"}